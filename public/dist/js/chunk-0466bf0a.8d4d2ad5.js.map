{"version":3,"sources":["webpack:///./node_modules/lodash/_isFlattenable.js","webpack:///./src/components/TreePicker/src/TreeSearch.vue?916b","webpack:///src/components/TreePicker/src/TreeSearch.vue","webpack:///./src/components/TreePicker/src/TreeSearch.vue?09c0","webpack:///./src/components/TreePicker/src/TreeSearch.vue","webpack:///./node_modules/lodash/now.js","webpack:///./node_modules/lodash/_trimmedEndIndex.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./node_modules/lodash/_baseFlatten.js","webpack:///./src/components/TreePicker/src/OrgPicker.vue?3e5e","webpack:///src/components/TreePicker/src/OrgPicker.vue","webpack:///./src/components/TreePicker/src/OrgPicker.vue?966e","webpack:///./src/components/TreePicker/src/OrgPicker.vue","webpack:///./node_modules/lodash/_baseTrim.js","webpack:///./src/components/TreePicker/src/SelectPicker.vue?6320","webpack:///./node_modules/lodash/flattenDeep.js","webpack:///./src/components/TreePicker/src/SelectPicker.vue?5d7c","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///src/components/TreePicker/src/SelectPicker.vue","webpack:///./src/components/TreePicker/src/SelectPicker.vue?48f4","webpack:///./src/components/TreePicker/src/SelectPicker.vue","webpack:///./src/components/TreePicker/src/TreeSearch.vue?03ed","webpack:///./node_modules/lodash/debounce.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","webpack:///./src/components/_utils.js","webpack:///./node_modules/lodash/isSymbol.js"],"names":["Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","isFlattenable","value","module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","_t","staticStyle","attrs","selectedValue","placeholder","on","onSelectSearch","onSelectChange","_l","opt","key","isShowParent","title","_v","_s","getNameBy","tmpSearchOption","pkey","_f","_e","fetching","ref","multiple","treeExpandedKeys","treeSelectedKeys","treeLoadedKeys","treeData","handleLoadLazyData","onSelectTree","onExpandTree","onLazyLoad","scopedSlots","_u","fn","replaceFields","Array","length","staticRenderFns","name","props","selectedKeys","type","default","expandedKeys","lazy","defaultValue","join","children","search","activeFirst","initLevel","fetchData","fetchDataById","fetchDataByName","valueField","data","selectOption","computed","isSearch","watch","handler","nVal","deep","immediate","mounted","methods","handleTreeData","params","then","dataRef","cloneDeep","aKeys","rows","lKeys","setTimeout","finally","console","handleTreeByCode","pFn","keysString","code","Promise","results","all","treeFormatList","flattenDeep","nrows","pKeys","handleLoadMore","keys","oRows","nRows","uniqueArrayBy","treeNodes","resolve","treeNode","handlerSearch","list","getExpandedKeys","Object","event","onSelectTreeFn","nData","nList","listFormatTree","getNodeBy","nKeys","selected","node","onScrollIntoView","querySelector","scrollIntoView","behavior","block","getElementById","filterList","joinNode","loadedKeys","component","root","now","Date","reWhitespace","trimmedEndIndex","string","index","test","charAt","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","arrayPush","baseFlatten","array","depth","predicate","isStrict","result","_g","_b","allowClear","disabled","fetchGetTree","fetchGetTreeById","fetchGetTreeByName","$attrs","$listeners","inheritAttrs","components","SelectPicker","model","prop","baseUrl","treeApi","treeApiById","treeApiByName","width","height","top","centered","limitLevel","orgUniqueCode","$ec","send","orgLevelNum","catch","reject","orgName","reTrimStart","baseTrim","slice","replace","INFINITY","maxTagCount","onChange","slot","onOpenModal","visible","widthed","onCancel","onOk","onSelectTreeData","li","$event","onRemoveOption","_arrayWithHoles","arr","_iterableToArrayLimit","_i","iterator","_arr","_n","_d","call","next","done","err","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","TreeSearch","treeSelectOption","handleTreeByName","handleListByCode","tmpOpt","option","map","onRefreshTree","isObject","toNumber","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","leadingEdge","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","isSymbol","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","f","normalCompletion","didErr","step","_e2","error","child","parentId","parent","parentTmp","String","Reflect","deleteProperty","every","item","clone","stack","shift","filterFn","isPlainObject","from","Set","Map","Error","set","size","values","paths","select","add","isLeaf","delete","reverse","getSelectedBy","by","dicList","label","baseGetTag","isObjectLike","symbolTag"],"mappings":"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","file":"js/chunk-0466bf0a.8d4d2ad5.js","sourcesContent":["var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tree-search\"},[_vm._t(\"title\"),(_vm.isSearch)?_c('div',{staticClass:\"tree-search-select\"},[_c('a-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"show-search\":\"\",\"value\":_vm.selectedValue,\"placeholder\":_vm.placeholder,\"default-active-first-option\":false,\"show-arrow\":false,\"filter-option\":false,\"not-found-content\":null},on:{\"search\":_vm.onSelectSearch,\"select\":_vm.onSelectChange}},_vm._l((_vm.selectOption),function(opt){return _c('a-select-option',{key:opt.key,attrs:{\"value\":opt.key,\"title\":(\"\" + (opt.title))}},[_c('a-row',[_c('a-col',{staticClass:\"ellipsis\",attrs:{\"span\":_vm.isShowParent ? 18 : 24,\"title\":opt.title}},[_vm._v(_vm._s(opt.title))]),_c('a-col',{staticClass:\"ellipsis\",staticStyle:{\"color\":\"#ccc\",\"font-size\":\"12px\"},attrs:{\"span\":_vm.isShowParent ? 6 : 0,\"title\":_vm.getNameBy(_vm.tmpSearchOption, opt.pkey)}},[_vm._v(_vm._s(_vm._f(\"getNameBy\")(opt.pkey,_vm.tmpSearchOption)))])],1)],1)}),1)],1):_vm._e(),(_vm.isSearch)?_c('a-divider',{staticStyle:{\"margin\":\"8px 0\"}}):_vm._e(),_c('div',{staticClass:\"tree-search-tree\"},[_c('a-spin',{attrs:{\"spinning\":_vm.fetching}},[(_vm.lazy)?_c('a-tree',{ref:\"treeRef\",attrs:{\"blockNode\":true,\"multiple\":_vm.multiple,\"expandedKeys\":_vm.treeExpandedKeys,\"selectedKeys\":_vm.treeSelectedKeys,\"loadedKeys\":_vm.treeLoadedKeys,\"tree-data\":_vm.treeData,\"loadData\":_vm.handleLoadLazyData},on:{\"select\":_vm.onSelectTree,\"expand\":_vm.onExpandTree,\"load\":_vm.onLazyLoad},scopedSlots:_vm._u([{key:\"title\",fn:function(ref){\nvar title = ref.title;\nvar key = ref.key;\nreturn [_c('span',{attrs:{\"id\":(\"c_\" + key)}},[_vm._v(_vm._s(title))])]}}],null,false,364953554)}):_c('a-tree',{ref:\"treeRef\",attrs:{\"blockNode\":true,\"multiple\":_vm.multiple,\"expandedKeys\":_vm.treeExpandedKeys,\"selectedKeys\":_vm.treeSelectedKeys,\"tree-data\":_vm.treeData,\"replaceFields\":_vm.replaceFields},on:{\"select\":_vm.onSelectTree,\"expand\":_vm.onExpandTree},scopedSlots:_vm._u([{key:\"title\",fn:function(ref){\nvar title = ref.title;\nvar key = ref.key;\nreturn [_c('span',{attrs:{\"id\":(\"c_\" + key)}},[_vm._v(_vm._s(title))])]}}])})],1),(!_vm.treeData || (Array.isArray(_vm.treeData) && _vm.treeData.length === 0))?_c('a-empty',{staticClass:\"spin\"}):_vm._e()],1)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"tree-search\">\r\n    <slot name=\"title\"></slot>\r\n    <div class=\"tree-search-select\" v-if=\"isSearch\">\r\n      <a-select\r\n        show-search\r\n        style=\"width: 100%\"\r\n        :value=\"selectedValue\"\r\n        :placeholder=\"placeholder\"\r\n        :default-active-first-option=\"false\"\r\n        :show-arrow=\"false\"\r\n        :filter-option=\"false\"\r\n        :not-found-content=\"null\"\r\n        @search=\"onSelectSearch\"\r\n        @select=\"onSelectChange\"\r\n      >\r\n        <a-select-option\r\n          v-for=\"opt in selectOption\"\r\n          :value=\"opt.key\"\r\n          :key=\"opt.key\"\r\n          :title=\"`${opt.title}`\"\r\n        >\r\n          <a-row>\r\n            <a-col :span=\"isShowParent ? 18 : 24\" :title=\"opt.title\" class=\"ellipsis\">{{\r\n              opt.title\r\n            }}</a-col>\r\n            <a-col\r\n              :span=\"isShowParent ? 6 : 0\"\r\n              class=\"ellipsis\"\r\n              style=\"color: #ccc; font-size: 12px\"\r\n              :title=\"getNameBy(tmpSearchOption, opt.pkey)\"\r\n              >{{ opt.pkey | getNameBy(tmpSearchOption) }}</a-col\r\n            >\r\n          </a-row>\r\n        </a-select-option>\r\n      </a-select>\r\n    </div>\r\n    <a-divider style=\"margin: 8px 0\" v-if=\"isSearch\" />\r\n    <div class=\"tree-search-tree\">\r\n      <a-spin :spinning=\"fetching\">\r\n        <a-tree\r\n          v-if=\"lazy\"\r\n          ref=\"treeRef\"\r\n          :blockNode=\"true\"\r\n          :multiple=\"multiple\"\r\n          :expandedKeys=\"treeExpandedKeys\"\r\n          :selectedKeys=\"treeSelectedKeys\"\r\n          :loadedKeys=\"treeLoadedKeys\"\r\n          :tree-data=\"treeData\"\r\n          :loadData=\"handleLoadLazyData\"\r\n          @select=\"onSelectTree\"\r\n          @expand=\"onExpandTree\"\r\n          @load=\"onLazyLoad\"\r\n        >\r\n          <template slot=\"title\" slot-scope=\"{ title, key }\">\r\n            <span :id=\"`c_${key}`\">{{ title }}</span>\r\n          </template>\r\n        </a-tree>\r\n        <a-tree\r\n          v-else\r\n          ref=\"treeRef\"\r\n          :blockNode=\"true\"\r\n          :multiple=\"multiple\"\r\n          :expandedKeys=\"treeExpandedKeys\"\r\n          :selectedKeys=\"treeSelectedKeys\"\r\n          :tree-data=\"treeData\"\r\n          :replaceFields=\"replaceFields\"\r\n          @select=\"onSelectTree\"\r\n          @expand=\"onExpandTree\"\r\n        >\r\n          <template slot=\"title\" slot-scope=\"{ title, key }\">\r\n            <span :id=\"`c_${key}`\">{{ title }}</span>\r\n          </template>\r\n        </a-tree>\r\n      </a-spin>\r\n      <a-empty\r\n        v-if=\"!treeData || (Array.isArray(treeData) && treeData.length === 0)\"\r\n        class=\"spin\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport flattenDeep from 'lodash/flattenDeep';\r\n// import debounce from 'lodash/debounce';\r\nimport {\r\n  filterList,\r\n  getExpandedKeys,\r\n  listFormatTree,\r\n  uniqueArrayBy,\r\n  getSelectedBy,\r\n  treeFormatList,\r\n  getNodeBy,\r\n  getNameBy,\r\n} from '@/components/_utils';\r\nimport debounce from 'lodash/debounce';\r\n\r\nexport default {\r\n  name: 'TreeSearch',\r\n  props: {\r\n    selectedKeys: {\r\n      type: Array,\r\n      default: null,\r\n    },\r\n    expandedKeys: {\r\n      type: Array,\r\n      default: null,\r\n    },\r\n    lazy: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    defaultValue: {\r\n      type: Array,\r\n      default: null,\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: '请输入关键词筛选',\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    join: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    isShowParent: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    replaceFields: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          pkey: 'pkey',\r\n          title: 'title',\r\n          key: 'key',\r\n          children: 'children',\r\n        };\r\n      },\r\n    },\r\n    search: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    activeFirst: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    initLevel: {\r\n      type: Number,\r\n      default: 2,\r\n    },\r\n    fetchData: {\r\n      type: Function,\r\n    },\r\n    fetchDataById: {\r\n      type: Function,\r\n    },\r\n    fetchDataByName: {\r\n      type: Function,\r\n    },\r\n    valueField: {\r\n      type: String,\r\n      default: 'key',\r\n    },\r\n  },\r\n  data() {\r\n    this.onSelectSearch = debounce(this.onSelectSearch, 500);\r\n    return {\r\n      fetching: false,\r\n      selectedValue: [],\r\n      treeSelectedKeys: [],\r\n      treeExpandedKeys: [],\r\n      treeLoadedKeys: [],\r\n      // 组织树结构数据\r\n      treeData: [],\r\n      // 关键词过滤\r\n      selectOption: [],\r\n      // 临时搜索出的下拉值\r\n      tmpSearchOption: [],\r\n    };\r\n  },\r\n  computed: {\r\n    isSearch() {\r\n      return (\r\n        this.search &&\r\n        (this.treeData || (Array.isArray(this.treeData) && this.treeData.length !== 0))\r\n      );\r\n    },\r\n  },\r\n  watch: {\r\n    selectedKeys: {\r\n      handler(nVal) {\r\n        this.treeSelectedKeys = nVal;\r\n      },\r\n      deep: true,\r\n      immediate: true,\r\n    },\r\n    expandedKeys: {\r\n      handler(nVal) {\r\n        this.treeExpandedKeys = nVal;\r\n      },\r\n      deep: true,\r\n      immediate: true,\r\n    },\r\n  },\r\n  mounted() {\r\n    this.handleTreeData(this.params);\r\n  },\r\n  methods: {\r\n    getNameBy,\r\n    // 初始化树数据\r\n    handleTreeData(params) {\r\n      this.fetching = true;\r\n      this.treeLoadedKeys = [];\r\n      this.treeExpandedKeys = [];\r\n      try {\r\n        this.fetchData(params)\r\n          .then(async (rows) => {\r\n            const dataRef = cloneDeep(rows).filter((n) => !n.pkey)[0];\r\n            this.treeData = listFormatTree(rows, this.replaceFields);\r\n            const aKeys = rows.map((item) => item.key).filter((item) => item);\r\n            const lKeys = (this.selectedKeys || []).filter((item) => !aKeys.includes(item));\r\n            if (Array.isArray(this.treeData) && this.treeData.length !== 0) {\r\n              this.treeExpandedKeys = [dataRef.key];\r\n              this.$emit('expand', this.treeExpandedKeys);\r\n              // this.treeSelectedKeys = [dataRef.key];\r\n              if (this.activeFirst) {\r\n                this.onSelectTreeFn(dataRef.key);\r\n              }\r\n            }\r\n            // console.log(aKeys, this.selectedKeys, lKeys);\r\n            if (lKeys.length !== 0) {\r\n              // 获取不存在的节点\r\n              await this.handleTreeByCode(lKeys);\r\n            }\r\n\r\n            // 默认滚动到第一个选中项\r\n            if (Array.isArray(this.treeSelectedKeys) && this.treeSelectedKeys.length !== 0) {\r\n              setTimeout(() => {\r\n                this.onScrollIntoView(this.treeSelectedKeys[0]);\r\n              }, 500);\r\n            }\r\n          })\r\n          .finally(() => {\r\n            this.fetching = false;\r\n          });\r\n      } catch {\r\n        console.error('fetchData请求错误，请检查httpUrl是否正确！');\r\n      }\r\n      this.fetching = false;\r\n    },\r\n    // 加载选中值得数据\r\n    async handleTreeByCode(value) {\r\n      const selectedValue = Array.isArray(value) ? value : [value];\r\n      this.fetching = true;\r\n      try {\r\n        if (this.lazy) {\r\n          const pFn = [];\r\n          for (const keysString of selectedValue) {\r\n            if (keysString) {\r\n              pFn.push(this.fetchDataById({ code: keysString }));\r\n            }\r\n          }\r\n          const results = await Promise.all(pFn);\r\n          const all = treeFormatList(this.treeData, this.replaceFields);\r\n          const rows = flattenDeep(results);\r\n          const aKeys = all.map((item) => item.key).filter((item) => item);\r\n          const nrows = rows.filter((item) => !aKeys.includes(item.key));\r\n          const pKeys = nrows.map((item) => item.pkey);\r\n          // console.log('aKeys, nrows, pKeys', aKeys, nrows, pKeys);\r\n          // console.log(aKeys, this.selectedKeys, lKeys);\r\n          if (pKeys.length !== 0) {\r\n            // 找到不存在的key的pkey加载即可\r\n            await this.handleLoadMore(pKeys);\r\n          }\r\n        }\r\n        // 懒加载和全部都一样\r\n        selectedValue.forEach((item) => {\r\n          const ekeys = getExpandedKeys(this.treeData, item, this.replaceFields);\r\n          this.treeExpandedKeys = Array.from(new Set([...ekeys, ...this.treeExpandedKeys]));\r\n        });\r\n      } catch {\r\n        console.error('http请求错误，请检查apiUrl是否正确！');\r\n      }\r\n      this.fetching = false;\r\n    },\r\n    // 异步加载其他需要的选项\r\n    async handleLoadMore(keys) {\r\n      this.fetching = true;\r\n      const pFn = [];\r\n      for (const keysString of keys) {\r\n        if (keysString) {\r\n          pFn.push(this.fetchData({ code: keysString }));\r\n        }\r\n      }\r\n      const results = await Promise.all(pFn);\r\n      const rows = flattenDeep(results);\r\n      const oRows = treeFormatList(this.treeData);\r\n      const nRows = uniqueArrayBy([...oRows, ...rows]);\r\n      // 更新未知数据;\r\n      this.treeData = listFormatTree(nRows, this.replaceFields);\r\n      this.fetching = false;\r\n    },\r\n    // 懒加载\r\n    handleLoadLazyData(treeNodes) {\r\n      const treeNode = treeNodes;\r\n      return new Promise((resolve) => {\r\n        if (treeNode.dataRef.children) {\r\n          resolve();\r\n          return;\r\n        }\r\n        this.fetchData({\r\n          code: treeNode.dataRef.key,\r\n        })\r\n          .then((rows) => {\r\n            const data = uniqueArrayBy(rows, 'key');\r\n            treeNode.dataRef.children = [...data];\r\n            this.treeData = [...this.treeData];\r\n            resolve(data);\r\n          })\r\n          .finally(() => {\r\n            this.fetching = false;\r\n            // treeNode.dataRef.loading = false;\r\n          });\r\n      });\r\n    },\r\n    // 在现有的树中搜索\r\n    onSelectSearch(value) {\r\n      if (/^\\s*$/.test(value)) return;\r\n      // if ([]) return;\r\n      this.handlerSearch(value);\r\n      this.$emit('search', value);\r\n    },\r\n    async handlerSearch(value) {\r\n      if (this.lazy) {\r\n        const rows = await this.fetchDataByName({ name: value }).catch((err) => console.log(err));\r\n        this.tmpSearchOption = cloneDeep(rows) || [];\r\n        this.selectOption = rows.filter((item) => {\r\n          return String(item?.title).indexOf(value) > -1;\r\n        });\r\n        // console.log(value, rows, this.selectOption);\r\n      } else {\r\n        this.selectOption = filterList(\r\n          this.treeData,\r\n          (item) => {\r\n            return String(item?.title).indexOf(value) > -1;\r\n          },\r\n          this.replaceFields,\r\n        );\r\n      }\r\n    },\r\n    // 过滤触发emit\r\n    async onSelectChange(keys) {\r\n      const selectedValue = Array.isArray(keys) ? keys : [keys];\r\n      const selectOption = cloneDeep(this.selectOption).filter((item) => {\r\n        return selectedValue.includes(item.key);\r\n      });\r\n      if (this.lazy) {\r\n        // 懒加载把检索数据插入treeData，重新组织\r\n        const list = treeFormatList(this.treeData, this.replaceFields);\r\n        const aKeys = list.map((item) => item.key).filter((item) => item);\r\n        const nrows = this.tmpSearchOption.filter((item) => !aKeys.includes(item.key));\r\n        const pKeys = nrows.map((item) => item.pkey);\r\n        // console.log('aKeys, nrows, pKeys', aKeys, nrows, pKeys);\r\n        if (pKeys.length !== 0) {\r\n          // 找到不存在的key的pkey加载即可\r\n          await this.handleLoadMore(pKeys);\r\n        }\r\n      }\r\n      // 获取展开的keys\r\n      const treeExpandedKeys = getExpandedKeys(\r\n        this.treeData,\r\n        Array.isArray(keys) ? keys[0] : keys,\r\n        this.replaceFields,\r\n      );\r\n      // 多选使用增量\r\n      if (this.multiple) {\r\n        !this.treeSelectedKeys.includes(selectedValue) &&\r\n          this.treeSelectedKeys.push(...selectedValue);\r\n      } else {\r\n        this.treeSelectedKeys = selectedValue;\r\n      }\r\n      Object.assign(this, {\r\n        selectedValue,\r\n        treeExpandedKeys,\r\n        selectOption,\r\n        fetching: false,\r\n      });\r\n      this.onSelectTreeFn(keys);\r\n    },\r\n    onExpandTree(keys, event) {\r\n      this.treeExpandedKeys = Array.isArray(keys) ? keys : [keys];\r\n      this.$emit('expand', this.treeExpandedKeys, event);\r\n    },\r\n    // 手动模拟select\r\n    async onSelectTreeFn(keys) {\r\n      const selectedValue = Array.isArray(keys) ? keys : [keys];\r\n      const keysString = Array.isArray(keys) ? keys[0] : keys;\r\n      // 当keys懒加载选项没有对应的key，重新从后端加载\r\n      const all = treeFormatList(this.treeData, this.replaceFields);\r\n      const aKeys = all.map((item) => item.key).filter((item) => item);\r\n      if (!aKeys.includes(keysString)) {\r\n        const nData = await this.fetchDataById({ code: keysString });\r\n        const nList = await uniqueArrayBy([...all, ...nData]);\r\n        this.treeData = await listFormatTree(nList);\r\n      }\r\n      const dataRef = getNodeBy(this.treeData, keysString);\r\n      const nKeys = Array.from(\r\n        new Set(this.multiple ? [...this.treeSelectedKeys, ...selectedValue] : selectedValue),\r\n      );\r\n      this.onSelectTree(nKeys, {\r\n        event: 'select',\r\n        selected: true,\r\n        node: { dataRef },\r\n      });\r\n    },\r\n    // 定位到指定节点\r\n    onScrollIntoView(keysString) {\r\n      this.$nextTick(() => {\r\n        // 多个树示例会导致联动\r\n        const isModal = document.querySelector('.picker-modal-tree');\r\n        if (isModal) {\r\n          document\r\n            .querySelector(`.picker-modal-tree #c_${keysString}`)\r\n            ?.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        } else {\r\n          document\r\n            .getElementById(`c_${keysString}`)\r\n            ?.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        }\r\n      });\r\n    },\r\n    // 选中树节点后emit\r\n    onSelectTree(keys, event) {\r\n      // console.log('treeSearch', event);\r\n      const treeSelectedKeys = Array.isArray(keys) ? keys : [keys];\r\n      const keysString = event.node.dataRef.key;\r\n      console.log('keysString', keysString);\r\n      // 选中一个或多个值\r\n      Object.assign(this, {\r\n        treeSelectedKeys,\r\n      });\r\n      // 选中一个或多个选项\r\n      const selectOption = uniqueArrayBy(\r\n        filterList(\r\n          this.treeData,\r\n          (item) => {\r\n            // 选中的都过滤出来\r\n            return this.treeSelectedKeys.includes(item.key);\r\n          },\r\n          this.replaceFields,\r\n        ),\r\n      );\r\n      if (this.join) {\r\n        const joinSelectOption = selectOption.map((item) => {\r\n          const joinNode = {};\r\n          for (const key in item) {\r\n            if (key) {\r\n              joinNode[key] = getSelectedBy(\r\n                this.treeData,\r\n                keysString,\r\n                key,\r\n                this.replaceFields,\r\n              ).join('/');\r\n            }\r\n          }\r\n          return joinNode;\r\n        });\r\n        // 根据valueField返回对应选中值\r\n        const selectedKeys = joinSelectOption.map((item) => item[this.valueField]);\r\n        this.$emit(\r\n          'select',\r\n          {\r\n            treeSelectedKeys: selectedKeys,\r\n            selectOption: joinSelectOption,\r\n            treeData: cloneDeep(this.treeData),\r\n          },\r\n          event,\r\n        );\r\n      } else {\r\n        // 根据valueField返回对应选中值\r\n        const selectedKeys = selectOption.map((item) => item[this.valueField]);\r\n        this.$emit(\r\n          'select',\r\n          {\r\n            treeSelectedKeys: selectedKeys,\r\n            selectOption,\r\n            treeData: cloneDeep(this.treeData),\r\n          },\r\n          event,\r\n        );\r\n      }\r\n      // 当前搜索值不等于当前点击值就清空搜索值\r\n      if (this.selectedValue[0] !== keysString) {\r\n        this.selectedValue = [];\r\n        this.selectOption = [];\r\n      }\r\n      this.onScrollIntoView(keysString);\r\n    },\r\n    onLazyLoad(loadedKeys) {\r\n      this.treeLoadedKeys = loadedKeys;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.tree-search {\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  .tree-search-select {\r\n    padding: 0 12px;\r\n    height: 40px;\r\n    width: 100%;\r\n  }\r\n  .tree-search-tree {\r\n    position: relative;\r\n    flex: 1;\r\n    width: 100%;\r\n    overflow: auto;\r\n    .spin {\r\n      position: absolute;\r\n      transform: translate(-50%, -50%);\r\n      left: 50%;\r\n      top: 50%;\r\n      margin: 0;\r\n    }\r\n  }\r\n}\r\n.ellipsis {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TreeSearch.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TreeSearch.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TreeSearch.vue?vue&type=template&id=5104dde7&\"\nimport script from \"./TreeSearch.vue?vue&type=script&lang=js&\"\nexport * from \"./TreeSearch.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TreeSearch.vue?vue&type=style&index=0&id=5104dde7&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('SelectPicker',_vm._g(_vm._b({attrs:{\"title\":_vm.title,\"value\":_vm.value,\"search\":_vm.search,\"allow-clear\":_vm.allowClear,\"placeholder\":_vm.placeholder,\"multiple\":_vm.multiple,\"disabled\":_vm.disabled,\"valueField\":_vm.valueField,\"fetchData\":_vm.fetchGetTree,\"fetchDataById\":_vm.fetchGetTreeById,\"fetchDataByName\":_vm.fetchGetTreeByName}},'SelectPicker',_vm.$attrs,false),_vm.$listeners))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <SelectPicker\r\n    v-bind=\"$attrs\"\r\n    :title=\"title\"\r\n    :value=\"value\"\r\n    :search=\"search\"\r\n    :allow-clear=\"allowClear\"\r\n    :placeholder=\"placeholder\"\r\n    :multiple=\"multiple\"\r\n    :disabled=\"disabled\"\r\n    :valueField=\"valueField\"\r\n    :fetchData=\"fetchGetTree\"\r\n    :fetchDataById=\"fetchGetTreeById\"\r\n    :fetchDataByName=\"fetchGetTreeByName\"\r\n    v-on=\"$listeners\"\r\n  />\r\n</template>\r\n<script>\r\nimport SelectPicker from './SelectPicker.vue';\r\nimport { treeFormatList } from '@/components/_utils';\r\n\r\nexport default {\r\n  inheritAttrs: false,\r\n  name: 'OrgPicker',\r\n  components: {\r\n    SelectPicker,\r\n  },\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change',\r\n  },\r\n  props: {\r\n    value: {\r\n      type: [String, Array, null],\r\n      default: null,\r\n    },\r\n    baseUrl: {\r\n      type: String,\r\n      default: '/dts/bim',\r\n    },\r\n    treeApi: {\r\n      type: String,\r\n      default: '/q/CmTOrgMainServiceExAPI/getCmTOrgMainTreeDataList/v1',\r\n    },\r\n    treeApiById: {\r\n      type: String,\r\n      default: '/q/cmTOrgMain/getCmTOrgMainTreeParentByOrgUniqueCode/v1',\r\n    },\r\n    treeApiByName: {\r\n      type: String,\r\n      default: '/q/cmTOrgMain/getCmTOrgMainTreeParentByOrgName/v1',\r\n    },\r\n    // 选择框默认文字\r\n    placeholder: {\r\n      type: String,\r\n      default: '请选择关键词搜索',\r\n    },\r\n    // 是否支持多选\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 是否支持清除\r\n    allowClear: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 是否禁用\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 选择器弹窗标题\r\n    title: {\r\n      type: String,\r\n      default: '组织机构选择器',\r\n    },\r\n    search: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 选择器弹窗的宽度 单位 px/%/vw (仅数字则视为 px)，默认560px\r\n    width: {\r\n      type: [String, Number],\r\n      default: '425px',\r\n    },\r\n    // 选择器弹窗的高度 单位 px/%/vh (仅数字则视为 px)，默认500px\r\n    height: {\r\n      type: [String, Number],\r\n      default: '370px',\r\n    },\r\n    // 选择器弹窗距页面顶部的距离 单位 px/%/vh (仅数字则视为 px)，默认100px\r\n    top: {\r\n      type: [String, Number],\r\n      default: '100px',\r\n    },\r\n    // 选择器弹窗是否垂直居中展示，默认 false\r\n    centered: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    initLevel: {\r\n      type: [Number, null],\r\n      default: 2,\r\n    },\r\n    limitLevel: {\r\n      type: [Number, null],\r\n      default: null,\r\n    },\r\n    replaceFields: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          pkey: 'pkey',\r\n          title: 'title',\r\n          key: 'key',\r\n          children: 'children',\r\n        };\r\n      },\r\n    },\r\n    valueField: {\r\n      type: String,\r\n      default: 'key',\r\n    },\r\n    join: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    lazy: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n  },\r\n  methods: {\r\n    // 获取树\r\n    fetchGetTree(params) {\r\n      return new Promise((resolve, reject) => {\r\n        const orgUniqueCode = params?.code;\r\n        orgUniqueCode && Reflect.deleteProperty(params, 'code');\r\n        $ec.http\r\n          .send(this.baseUrl + this.treeApi, {\r\n            orgLevelNum: this.limitLevel,\r\n            orgUniqueCode,\r\n            ...params,\r\n          })\r\n          .then(({ rows }) => {\r\n            const data = treeFormatList(rows, this.replaceFields);\r\n            resolve(data);\r\n          })\r\n          .catch((err) => {\r\n            // 发生错误在catch分支判断\r\n            reject(err);\r\n          })\r\n          .finally(() => {\r\n            console.log('finally');\r\n          });\r\n      });\r\n    },\r\n    // 获取树id节点数据\r\n    fetchGetTreeById(params) {\r\n      return new Promise((resolve, reject) => {\r\n        const orgUniqueCode = params?.code;\r\n        orgUniqueCode && Reflect.deleteProperty(params, 'code');\r\n        $ec.http\r\n          .send(this.baseUrl + this.treeApiById, {\r\n            orgLevelNum: this.limitLevel,\r\n            orgUniqueCode,\r\n            ...params,\r\n          })\r\n          .then(({ rows }) => {\r\n            const data = treeFormatList(rows, this.replaceFields);\r\n            resolve(data);\r\n          })\r\n          .catch((err) => {\r\n            // 发生错误在catch分支判断\r\n            reject(err);\r\n          })\r\n          .finally(() => {\r\n            console.log('finally');\r\n          });\r\n      });\r\n    },\r\n    // 获取树id节点数据\r\n    fetchGetTreeByName(params) {\r\n      return new Promise((resolve, reject) => {\r\n        const orgName = params?.name;\r\n        orgName && Reflect.deleteProperty(params, 'name');\r\n        $ec.http\r\n          .send(this.baseUrl + this.treeApiByName, {\r\n            orgLevelNum: this.limitLevel,\r\n            orgName,\r\n            ...params,\r\n          })\r\n          .then(({ rows }) => {\r\n            const data = treeFormatList(rows, this.replaceFields);\r\n            resolve(data);\r\n          })\r\n          .catch((err) => {\r\n            // 发生错误在catch分支判断\r\n            reject(err);\r\n          })\r\n          .finally(() => {\r\n            console.log('finally');\r\n          });\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\"></style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OrgPicker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OrgPicker.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OrgPicker.vue?vue&type=template&id=14b03b74&\"\nimport script from \"./OrgPicker.vue?vue&type=script&lang=js&\"\nexport * from \"./OrgPicker.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectPicker.vue?vue&type=style&index=0&id=693419fb&prod&lang=less&\"","var baseFlatten = require('./_baseFlatten');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Recursively flattens `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flattenDeep([1, [2, [3, [4]], 5]]);\n * // => [1, 2, 3, 4, 5]\n */\nfunction flattenDeep(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, INFINITY) : [];\n}\n\nmodule.exports = flattenDeep;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"picker-modal\"},[_c('a-input-group',{staticClass:\"picker-wrapper\",attrs:{\"compact\":\"\"}},[_c('a-select',{staticClass:\"picker-wrapper-select\",staticStyle:{\"width\":\"200px\"},attrs:{\"value\":_vm.selectedValue,\"show-search\":\"\",\"allow-clear\":_vm.allowClear,\"placeholder\":_vm.placeholder,\"mode\":_vm.multiple ? 'multiple' : 'default',\"disabled\":_vm.disabled,\"show-arrow\":false,\"filter-option\":false,\"maxTagCount\":_vm.maxTagCount,\"default-active-first-option\":false,\"not-found-content\":_vm.fetching ? undefined : null},on:{\"search\":_vm.onSelectSearch,\"change\":_vm.onChange}},[(_vm.fetching)?_c('a-spin',{attrs:{\"slot\":\"notFoundContent\",\"size\":\"small\"},slot:\"notFoundContent\"}):_vm._e(),_vm._l((_vm.selectOption),function(opt){return _c('a-select-option',{key:opt[_vm.valueField],attrs:{\"title\":(\"\" + (opt.title)),\"value\":opt[_vm.valueField]}},[_vm._v(\" \"+_vm._s(opt.title)+\" \")])})],2),_c('div',{staticClass:\"picker-btn-wrapper\"},[_c('a-button',{staticClass:\"picker-wrapper-btn\",attrs:{\"icon\":\"more\",\"disabled\":_vm.disabled},on:{\"click\":_vm.onOpenModal}})],1)],1),_c('ec-modal',{attrs:{\"title\":_vm.title,\"visible\":_vm.visible,\"width\":_vm.widthed,\"height\":_vm.height,\"top\":_vm.top,\"centered\":_vm.centered,\"keyboard\":false,\"mask-closable\":false},on:{\"cancel\":_vm.onCancel,\"ok\":_vm.onOk}},[(_vm.visible)?_c('TreeSearch',{ref:\"treeSearch\",staticClass:\"picker-modal-tree\",attrs:{\"lazy\":_vm.lazy,\"join\":_vm.join,\"search\":_vm.search,\"initLevel\":_vm.initLevel,\"multiple\":_vm.multiple,\"selectedKeys\":_vm.selectedKeys,\"expandedKeys\":_vm.expandedKeys,\"fetchData\":_vm.fetchData,\"fetchDataById\":_vm.fetchDataById,\"fetchDataByName\":_vm.fetchDataByName,\"replaceFields\":_vm.replaceFields,\"valueField\":_vm.valueField,\"isShowParent\":_vm.isShowParent},on:{\"select\":_vm.onSelectTreeData}}):_vm._e(),(_vm.multiple)?_c('a-divider',{staticStyle:{\"height\":\"100%\"},attrs:{\"type\":\"vertical\"}}):_vm._e(),(_vm.multiple)?_c('div',{staticClass:\"picker-modal-wrap\"},[_c('div',{staticStyle:{\"height\":\"30px\",\"line-height\":\"30px\",\"font-size\":\"12px\",\"text-align\":\"right\"}},[_vm._v(\" 已选择：\"),_c('strong',[_vm._v(_vm._s(_vm.selectedKeys.length))]),_vm._v(\"项 \")]),_c('div',{staticClass:\"picker-modal-list\"},[_vm._l((_vm.treeSelectOption),function(li){return _c('div',{key:li.key},[_c('a-tag',{key:li.key,attrs:{\"color\":\"blue\",\"closable\":true,\"size\":\"large\"},on:{\"close\":function($event){return _vm.onRemoveOption(li.key)}}},[_vm._v(_vm._s(li.title))])],1)}),(!_vm.selectedKeys || (Array.isArray(_vm.selectedKeys) && _vm.selectedKeys.length === 0))?_c('a-empty',{staticClass:\"spin\"}):_vm._e()],2)]):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","<template>\r\n  <div class=\"picker-modal\">\r\n    <a-input-group class=\"picker-wrapper\" compact>\r\n      <a-select\r\n        class=\"picker-wrapper-select\"\r\n        :value=\"selectedValue\"\r\n        show-search\r\n        :allow-clear=\"allowClear\"\r\n        :placeholder=\"placeholder\"\r\n        :mode=\"multiple ? 'multiple' : 'default'\"\r\n        :disabled=\"disabled\"\r\n        style=\"width: 200px\"\r\n        :show-arrow=\"false\"\r\n        :filter-option=\"false\"\r\n        :maxTagCount=\"maxTagCount\"\r\n        :default-active-first-option=\"false\"\r\n        :not-found-content=\"fetching ? undefined : null\"\r\n        @search=\"onSelectSearch\"\r\n        @change=\"onChange\"\r\n      >\r\n        <a-spin v-if=\"fetching\" slot=\"notFoundContent\" size=\"small\" />\r\n        <a-select-option\r\n          v-for=\"opt in selectOption\"\r\n          :title=\"`${opt.title}`\"\r\n          :value=\"opt[valueField]\"\r\n          :key=\"opt[valueField]\"\r\n        >\r\n          {{ opt.title }}\r\n        </a-select-option>\r\n      </a-select>\r\n      <div class=\"picker-btn-wrapper\">\r\n        <a-button\r\n          class=\"picker-wrapper-btn\"\r\n          icon=\"more\"\r\n          :disabled=\"disabled\"\r\n          @click=\"onOpenModal\"\r\n        ></a-button>\r\n      </div>\r\n    </a-input-group>\r\n    <ec-modal\r\n      :title=\"title\"\r\n      :visible=\"visible\"\r\n      :width=\"widthed\"\r\n      :height=\"height\"\r\n      :top=\"top\"\r\n      :centered=\"centered\"\r\n      :keyboard=\"false\"\r\n      :mask-closable=\"false\"\r\n      @cancel=\"onCancel\"\r\n      @ok=\"onOk\"\r\n    >\r\n      <TreeSearch\r\n        v-if=\"visible\"\r\n        ref=\"treeSearch\"\r\n        class=\"picker-modal-tree\"\r\n        :lazy=\"lazy\"\r\n        :join=\"join\"\r\n        :search=\"search\"\r\n        :initLevel=\"initLevel\"\r\n        :multiple=\"multiple\"\r\n        :selectedKeys=\"selectedKeys\"\r\n        :expandedKeys=\"expandedKeys\"\r\n        :fetchData=\"fetchData\"\r\n        :fetchDataById=\"fetchDataById\"\r\n        :fetchDataByName=\"fetchDataByName\"\r\n        :replaceFields=\"replaceFields\"\r\n        :valueField=\"valueField\"\r\n        :isShowParent=\"isShowParent\"\r\n        @select=\"onSelectTreeData\"\r\n      />\r\n      <a-divider type=\"vertical\" style=\"height: 100%\" v-if=\"multiple\" />\r\n      <div class=\"picker-modal-wrap\" v-if=\"multiple\">\r\n        <div style=\"height: 30px; line-height: 30px; font-size: 12px; text-align: right\">\r\n          已选择：<strong>{{ selectedKeys.length }}</strong\r\n          >项\r\n        </div>\r\n        <div class=\"picker-modal-list\">\r\n          <!-- <a-input-search placeholder=\"请输入过滤关键词\" @search=\"onSearchList\" /> -->\r\n          <div v-for=\"li in treeSelectOption\" :key=\"li.key\">\r\n            <a-tag\r\n              color=\"blue\"\r\n              :key=\"li.key\"\r\n              :closable=\"true\"\r\n              size=\"large\"\r\n              @close=\"onRemoveOption(li.key)\"\r\n              >{{ li.title }}</a-tag\r\n            >\r\n          </div>\r\n          <a-empty\r\n            v-if=\"!selectedKeys || (Array.isArray(selectedKeys) && selectedKeys.length === 0)\"\r\n            class=\"spin\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </ec-modal>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { listFormatTree, filterList, getSelectedBy, uniqueArrayBy } from '@/components/_utils';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport debounce from 'lodash/debounce';\r\nimport flattenDeep from 'lodash/flattenDeep';\r\nimport TreeSearch from './TreeSearch.vue';\r\n\r\nexport default {\r\n  name: 'SelectPicker',\r\n  components: {\r\n    TreeSearch,\r\n  },\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change',\r\n  },\r\n  props: {\r\n    value: {\r\n      type: [String, Array],\r\n      default: null,\r\n    },\r\n    maxTagCount: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    // 选择框默认文字\r\n    placeholder: {\r\n      type: String,\r\n      default: '请选择关键词搜索',\r\n    },\r\n    // 是否懒加载\r\n    lazy: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 是否支持多选\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    isShowParent: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 是否支持清除\r\n    allowClear: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 是否禁用\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 选择器弹窗标题\r\n    title: {\r\n      type: String,\r\n      default: '选择器',\r\n    },\r\n    // 选择器弹窗的宽度 单位 px/%/vw (仅数字则视为 px)，默认，560px\r\n    width: {\r\n      type: [String, Number],\r\n      default: '425px',\r\n    },\r\n    // 选择器弹窗的高度 单位 px/%/vh (仅数字则视为 px)，默认500px\r\n    height: {\r\n      type: [String, Number],\r\n      default: '370px',\r\n    },\r\n    // 选择器弹窗距页面顶部的距离 单位 px/%/vh (仅数字则视为 px)，默认100px\r\n    top: {\r\n      type: [String, Number],\r\n      default: '100px',\r\n    },\r\n    // 选择器弹窗是否垂直居中展示，默认 false\r\n    centered: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    join: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    search: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    initLevel: {\r\n      type: Number,\r\n      default: 2,\r\n    },\r\n    replaceFields: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          pkey: 'pkey',\r\n          title: 'title',\r\n          key: 'key',\r\n          children: 'children',\r\n        };\r\n      },\r\n    },\r\n    valueField: {\r\n      type: String,\r\n      default: 'key',\r\n    },\r\n    fetchData: {\r\n      type: Function,\r\n    },\r\n    fetchDataById: {\r\n      type: Function,\r\n    },\r\n    fetchDataByName: {\r\n      type: Function,\r\n    },\r\n  },\r\n  data() {\r\n    this.onSelectSearch = debounce(this.onSelectSearch, 300);\r\n    return {\r\n      // 是否显示弹窗\r\n      visible: false,\r\n      fetching: false,\r\n      // 树节点数据\r\n      treeData: [],\r\n      // input选中值\r\n      selectedValue: [],\r\n      expandedKeys: [],\r\n      // 树节点选中的值\r\n      selectedKeys: [],\r\n      // 筛选或过滤选项\r\n      selectOption: [],\r\n      // 树选中数据\r\n      treeSelectOption: [],\r\n    };\r\n  },\r\n  computed: {\r\n    widthed() {\r\n      const [n, p] = String(this.width).match(/[a-z]+|[^a-z]+/gi);\r\n      return this.multiple ? Number(n) + 140 + p : this.width;\r\n    },\r\n  },\r\n  watch: {\r\n    value: {\r\n      // 值发生变化触发事件\r\n      handler(nVal) {\r\n        this.handleListByCode(nVal);\r\n      },\r\n      deep: true,\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    async handleTreeByName(value) {\r\n      this.fetching = true;\r\n      try {\r\n        if (this.lazy) {\r\n          const rows = await this.fetchDataByName({ name: value }, value);\r\n          const opt = filterList(\r\n            rows,\r\n            (item) => {\r\n              return String(item?.title).indexOf(value) > -1;\r\n            },\r\n            this.replaceFields,\r\n          );\r\n          this.selectOption = uniqueArrayBy([...this.selectOption, ...opt], 'key');\r\n        } else {\r\n          const rows = await this.fetchData();\r\n          this.treeData = listFormatTree(rows, this.replaceFields);\r\n          this.selectOption = filterList(\r\n            rows,\r\n            (item) => {\r\n              return String(item?.title).indexOf(value) > -1;\r\n            },\r\n            this.replaceFields,\r\n          );\r\n        }\r\n      } catch {\r\n        console.error('http请求错误，请检查apiUrl是否正确！');\r\n      }\r\n      this.fetching = false;\r\n    },\r\n    // 加载选中值得数据\r\n    async handleListByCode(value) {\r\n      let selectedValue = [];\r\n      if (value) {\r\n        selectedValue = Array.isArray(value) ? value : [value];\r\n        this.fetching = true;\r\n        try {\r\n          if (this.lazy) {\r\n            const pFn = [];\r\n            for (const keysString of selectedValue) {\r\n              if (keysString) {\r\n                pFn.push(this.fetchDataById({ code: keysString }, value));\r\n              }\r\n            }\r\n            const results = await Promise.all(pFn);\r\n            const rows = flattenDeep(results);\r\n            const tmpOpt = filterList(\r\n              rows,\r\n              (item) => {\r\n                return selectedValue.includes(item.key);\r\n              },\r\n              this.replaceFields,\r\n            );\r\n            this.selectOption = uniqueArrayBy(tmpOpt);\r\n            this.treeSelectOption = cloneDeep(this.selectOption);\r\n          } else {\r\n            const rows = await this.fetchData();\r\n            this.treeData = listFormatTree(rows, this.replaceFields);\r\n            this.selectOption = filterList(\r\n              rows,\r\n              (item) => {\r\n                return String(item?.key).indexOf(value) > -1;\r\n              },\r\n              this.replaceFields,\r\n            );\r\n          }\r\n        } catch {\r\n          console.error('http请求错误，请检查apiUrl是否正确！');\r\n        }\r\n      }\r\n      this.selectedValue = selectedValue;\r\n      this.selectedKeys = selectedValue;\r\n      this.fetching = false;\r\n    },\r\n    // select关机词搜索，获取treeData和过滤值\r\n    onSelectSearch(value) {\r\n      if (/^\\s*$/.test(value)) return;\r\n      this.handleTreeByName(value);\r\n    },\r\n    // 动态双向绑定\r\n    onChange(value, option) {\r\n      // console.log(value, option);\r\n      const selectedValue = Array.isArray(value) ? value : [value];\r\n      if (this.join) {\r\n        const joinSelectOption = this.selectOption.map((item) => {\r\n          const joinNode = {};\r\n          for (const key in item) {\r\n            if (key) {\r\n              joinNode[key] = getSelectedBy(this.treeData, item.key, key, this.replaceFields).join(\r\n                '/',\r\n              );\r\n            }\r\n          }\r\n          return joinNode;\r\n        });\r\n        // 根据valueField返回对应选中值\r\n        const selectedKeys = joinSelectOption\r\n          .map((item) => item[this.valueField])\r\n          .filter((item) => selectedValue.includes(item));\r\n\r\n        // 过滤选中的数据\r\n        Object.assign(this, {\r\n          selectOption: joinSelectOption,\r\n        });\r\n        this.$emit('change', selectedKeys, option);\r\n      } else {\r\n        // 过滤选中的数据\r\n        const selectedKeys = this.selectOption\r\n          .map((item) => item[this.valueField])\r\n          .filter((item) => selectedValue.includes(item));\r\n        // console.log('selectedKeys', this.selectOption, value, selectedKeys);\r\n        this.$emit('change', selectedKeys, option);\r\n      }\r\n    },\r\n    // 打开树弹窗\r\n    onOpenModal() {\r\n      this.visible = true;\r\n    },\r\n    // 定位到指定节点\r\n    onScrollIntoView(keysString) {\r\n      this.$nextTick(() => {\r\n        // 多个树示例会导致联动\r\n        const isModal = document.querySelector('.picker-modal-tree');\r\n        if (isModal) {\r\n          document\r\n            .querySelector(`.picker-modal-tree #c_${keysString}`)\r\n            ?.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        } else {\r\n          document\r\n            .getElementById(`c_${keysString}`)\r\n            ?.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        }\r\n      });\r\n    },\r\n    // 从树中获取数据,临时存储\r\n    onSelectTreeData({ treeSelectedKeys, treeData, selectOption }) {\r\n      Object.assign(this, {\r\n        selectedKeys: treeSelectedKeys,\r\n        treeSelectOption: selectOption,\r\n        treeData,\r\n      });\r\n    },\r\n    // 移除多余选项\r\n    onRemoveOption(value) {\r\n      this.selectedKeys = this.selectedKeys.filter((item) => item !== value);\r\n      this.treeSelectOption = this.treeSelectOption.filter((item) => item.key !== value);\r\n      this.onScrollIntoView(value);\r\n    },\r\n    // 确定\r\n    onOk() {\r\n      if (\r\n        this.selectedKeys === null ||\r\n        (Array.isArray(this.selectedKeys) && this.selectedKeys.length === 0)\r\n      ) {\r\n        return this.$message.info('请先选择单位');\r\n      }\r\n\r\n      // 双向绑定,触发更新值\r\n      this.$emit('change', this.selectedKeys);\r\n      // 更新下拉列表\r\n      Object.assign(this, {\r\n        visible: false,\r\n        selectOption: this.treeSelectOption,\r\n      });\r\n      // 向外暴露选中值和option\r\n      this.$emit('ok', {\r\n        selectedValue: this.selectedValue,\r\n        selectOption: this.treeSelectOption,\r\n      });\r\n    },\r\n    // 取消\r\n    onCancel() {\r\n      this.visible = false;\r\n    },\r\n    // 组件调用刷新树\r\n    onRefreshTree(params) {\r\n      this.$ref.treeSearch && this.$ref.treeSearch.handleTreeData(params);\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.picker-modal {\r\n  width: 100%;\r\n  display: block;\r\n  .picker-wrapper {\r\n    display: flex !important;\r\n    width: 100%;\r\n    .picker-wrapper-select {\r\n      flex: 1 1 40px;\r\n    }\r\n    .picker-btn-wrapper {\r\n      flex-shrink: 0;\r\n      .picker-wrapper-btn {\r\n        border-radius: 0 4px 4px 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n.ant-modal-body {\r\n  display: flex;\r\n  .picker-modal-tree {\r\n    flex: 1 200px;\r\n  }\r\n  .picker-modal-wrap {\r\n    .picker-modal-list {\r\n      height: calc(100% - 30px);\r\n      width: 200px;\r\n      padding-left: 12px;\r\n      overflow-y: auto;\r\n      overflow-x: hidden;\r\n      .spin {\r\n        margin-top: 50px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectPicker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectPicker.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SelectPicker.vue?vue&type=template&id=693419fb&\"\nimport script from \"./SelectPicker.vue?vue&type=script&lang=js&\"\nexport * from \"./SelectPicker.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SelectPicker.vue?vue&type=style&index=0&id=693419fb&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TreeSearch.vue?vue&type=style&index=0&id=5104dde7&prod&lang=less&\"","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import cloneDeep from 'lodash/cloneDeep';\r\nimport isPlainObject from 'lodash/isPlainObject';\r\n/**\r\n * 平铺树结构转换标注树结构\r\n * @param {Array} list 平铺类型数据\r\n * @param {Object | Null} replace 替换属性名称，key原来属性，value新属性\r\n * @param {Object} option 对应replace中的key字段，pkey和children必填\r\n * @returns treeData树结构\r\n */\r\nexport function listFormatTree(\r\n  list = [],\r\n  replace = { pkey: 'pkey', key: 'key', title: 'title', children: 'children' },\r\n  option = { pkey: 'pkey', children: 'children' },\r\n) {\r\n  if (!Array.isArray(list)) {\r\n    return console.error('请传入一个list数组');\r\n  }\r\n  list.forEach((child) => {\r\n    const parentId = child[option.pkey];\r\n    if (parentId) {\r\n      list.forEach((parent) => {\r\n        const parentTmp = parent;\r\n        // 替换属性\r\n        if (replace) {\r\n          for (const key in replace) {\r\n            // 新旧属性不一致的替换\r\n            if (String(key) !== String(replace[key])) {\r\n              if (\r\n                Array.isArray(parentTmp[replace[key]]) ||\r\n                parentTmp[replace[key]] instanceof Object\r\n              ) {\r\n                parentTmp[key] = cloneDeep(parentTmp[replace[key]]);\r\n              } else {\r\n                parentTmp[key] = parentTmp[replace[key]];\r\n              }\r\n              Reflect.deleteProperty(parentTmp, replace[key]);\r\n            }\r\n          }\r\n        }\r\n        if (parentTmp && parentTmp.key === parentId) {\r\n          parentTmp[option.children] = parentTmp[option.children] || [];\r\n          parentTmp[option.children].push(child);\r\n        }\r\n      });\r\n    }\r\n  });\r\n  const root = list.every((item) => item[replace.pkey]);\r\n  if (root) {\r\n    return console.error('至少有一个根节点pid为null数组或传入一个空数组', list);\r\n  }\r\n  return list.filter((n) => !n[option.pkey]);\r\n}\r\n\r\n/**\r\n * 树转换为扁平树结构\r\n * @param {Array} treeData 树结构\r\n * @param {Object | Null} replace 替换属性名称，value要替换的属性名，null 不替换\r\n * @param {String} children 对应replace中children字段\r\n * @returns\r\n */\r\nexport function treeFormatList(\r\n  treeData = [],\r\n  replace = { pkey: 'pkey', key: 'key', title: 'title' },\r\n  children = 'children',\r\n) {\r\n  if (!Array.isArray(treeData)) {\r\n    return console.error('请传入一个tree数组');\r\n  }\r\n  const list = [];\r\n  const clone = cloneDeep(treeData);\r\n  const stack = [...clone];\r\n  while (stack.length) {\r\n    const node = stack.shift();\r\n    const child = node[children];\r\n    if (child) {\r\n      stack.push(...child);\r\n    }\r\n    // 如果存在replace那就依次更换属性名称\r\n    if (replace) {\r\n      for (const key in replace) {\r\n        if (String(key) !== String(replace[key])) {\r\n          if (Array.isArray(node[replace[key]]) || node[replace[key]] instanceof Object) {\r\n            node[key] = cloneDeep(node[replace[key]]);\r\n          } else {\r\n            node[key] = node[replace[key]];\r\n          }\r\n          Reflect.deleteProperty(node, replace[key]);\r\n        }\r\n      }\r\n    }\r\n    // 删除空children属性\r\n    Reflect.deleteProperty(node, children);\r\n    list.push(node);\r\n  }\r\n  // 如果本身是list就返回本身\r\n  return list.length === 0 ? treeData : list;\r\n}\r\n\r\n/**\r\n * 过滤树，并保留原有的结构\r\n * @param {Array} treeData\r\n * @param {Function} filterFn 回调函数值判断来过滤，默认true不过滤\r\n * @param {String} children 子节点字段属性名称\r\n * @returns\r\n */\r\nexport function filterTree(treeData = [], filterFn = () => true, children = 'children') {\r\n  if (!Array.isArray(treeData)) {\r\n    return console.error('请传入一个tree数组');\r\n  }\r\n  function filter(treeDatas) {\r\n    if (!treeDatas?.length) {\r\n      return treeDatas;\r\n    }\r\n    return treeDatas.filter((data) => {\r\n      const item = data;\r\n      if (!filterFn(item)) {\r\n        return false;\r\n      }\r\n      item[children] = filter(item[children]);\r\n      return true;\r\n    });\r\n  }\r\n\r\n  return filter(treeData) || [];\r\n}\r\n\r\n/**\r\n * 树转为list并且过滤返回过滤的列表\r\n * @param {Array} treeData 树结构数据\r\n * @param {Function} filterFn 回调函数值判断来过滤，默认true不过滤\r\n * @param {Object | Null} replace 替换属性名称，value要替换的属性名，null 不替换\r\n * @returns 过滤后的数据\r\n */\r\nexport function filterList(\r\n  treeData,\r\n  filterFn = () => true,\r\n  replace = { pkey: 'pkey', key: 'key', title: 'title' },\r\n) {\r\n  if (!Array.isArray(treeData)) {\r\n    return console.error('请传入一个tree数组');\r\n  }\r\n  const clone = cloneDeep(treeData);\r\n  const list = treeFormatList(clone, replace);\r\n  return list.filter((item) => {\r\n    if (!filterFn(item)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n}\r\n\r\n/**\r\n * 数组去重\r\n * @param {Array} arr 存在重复数组对象\r\n * @param {String} prop 依据该属性判断唯一\r\n * @returns\r\n */\r\nexport function uniqueArrayBy(arr = [], prop = 'key') {\r\n  if (!Array.isArray(arr)) {\r\n    return console.error('请传入一个数组');\r\n  }\r\n  if (arr && arr.length !== 0 && isPlainObject(arr[0])) {\r\n    const map = new Map();\r\n    arr.forEach((item) => {\r\n      if (item[prop]) {\r\n        map.set(item[prop], item);\r\n      } else {\r\n        throw new Error('prop参数不匹配，在节点找不到对应的值');\r\n      }\r\n    });\r\n    if (map.size !== 0) {\r\n      return Array.from(map.values());\r\n    }\r\n  } else {\r\n    return Array.from(new Set(arr));\r\n  }\r\n}\r\n\r\n/**\r\n * 获取选中节点展开的keys\r\n * @param {Array} treeData 树data\r\n * @param {String} selected 选中的节点\r\n * @param {Object | Null} replace 替换属性名称，value要替换的属性名，null 不替换\r\n * @param {Object} option 默认配置\r\n * @returns {Array} 路径数组\r\n */\r\nexport function getExpandedKeys(\r\n  treeData,\r\n  selected,\r\n  replace = { pkey: 'pkey', key: 'key', title: 'title' },\r\n  option = { pkey: 'pkey', key: 'key' },\r\n) {\r\n  if (!Array.isArray(treeData)) {\r\n    return console.error('请传入一个tree数组');\r\n  }\r\n  const paths = new Set();\r\n  const data = treeFormatList(treeData, replace);\r\n  function fn(list, select) {\r\n    list.forEach((node) => {\r\n      if (String(node[option.key]) === String(select)) {\r\n        paths.add(node[option.key]);\r\n        // 移除叶子节点\r\n        if (node.isLeaf) {\r\n          paths.delete(node[option.key]);\r\n        }\r\n        fn(list, node[option.pkey]);\r\n      }\r\n    });\r\n  }\r\n  fn(data, selected);\r\n  return Array.from(paths)\r\n    .reverse()\r\n    .filter((item) => item !== selected);\r\n}\r\n\r\n/**\r\n * 获取选中节点选择的keys\r\n * @param {Array} treeData 树data\r\n * @param {String} selected 选中的节点\r\n * @param {String} by 依据by字段取值，默认配置'key'\r\n * @param {Object | Null} replace 替换属性名称，value要替换的属性名，null 不替换\r\n * @param {Object} option 默认配置\r\n * @returns {Array} 路径数组\r\n */\r\nexport function getSelectedBy(\r\n  treeData,\r\n  selected,\r\n  by = 'key',\r\n  replace = { pkey: 'pkey', key: 'key', title: 'title' },\r\n  option = { pkey: 'pkey', key: 'key' },\r\n) {\r\n  if (!Array.isArray(treeData)) {\r\n    return console.error('请传入一个tree数组');\r\n  }\r\n  const keys = new Set();\r\n  const data = treeFormatList(treeData, replace);\r\n  function fn(list, select) {\r\n    list.forEach((node) => {\r\n      if (String(node[option.key]) === String(select)) {\r\n        keys.add(node[by]);\r\n        fn(list, node[option.pkey]);\r\n      }\r\n    });\r\n  }\r\n  fn(data, selected);\r\n  return Array.from(keys).reverse();\r\n}\r\n\r\n/**\r\n * 根据选中的属性获取节点node\r\n * @param {Array} treeData 树data\r\n * @param {String} selected 选中的节点值\r\n * @param {String} by 属性名称\r\n * @param {Object | Null} replace 替换属性名称，key原来属性，value新属性\r\n * @returns {Object} 选中的节点对象\r\n */\r\nexport function getNodeBy(\r\n  treeData,\r\n  selected,\r\n  by = 'key',\r\n  replace = { pkey: 'pkey', key: 'key', title: 'title' },\r\n) {\r\n  if (!Array.isArray(treeData)) {\r\n    return console.error('请传入一个tree数组');\r\n  }\r\n  const data = treeFormatList(treeData, replace);\r\n  const node = data.filter((n) => {\r\n    return String(n[by]) === String(selected);\r\n  });\r\n  return Array.isArray(node) && node.length === 1 ? node[0] : null;\r\n}\r\n\r\n/**\r\n * 根据选中的属性获取对应的name名称\r\n * @param {Array} dicList 字典列表\r\n * @param {String} value 节点值\r\n * @param {String} option 字典中key和label字典对应字段名称\r\n * @returns {String} 值对应的属性\r\n */\r\nexport function getNameBy(dicList, value, option = { key: 'key', label: 'title' }) {\r\n  if (!Array.isArray(dicList)) {\r\n    return console.error('请传入一个字典数组');\r\n  }\r\n  const node = dicList.filter((n) => {\r\n    return String(n[option.key]) === String(value);\r\n  });\r\n  // console.log(node)\r\n  if (node && node.length !== 0) {\r\n    return node[0][option.label];\r\n  }\r\n  return '';\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n"],"sourceRoot":""}