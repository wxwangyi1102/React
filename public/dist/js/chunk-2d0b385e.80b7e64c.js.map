{"version":3,"sources":["webpack:///./src/views/apm/demand/query/Index.vue?ed57","webpack:///src/views/apm/demand/query/Index.vue","webpack:///./src/views/apm/demand/query/Index.vue?5404","webpack:///./src/views/apm/demand/query/Index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","on","$event","$refs","table","pageAction","onReset","model","value","queryItems","callback","$$v","$set","expression","_l","item","key","batchName","_v","_s","demandOrgCode","demandOrgName","staticClass","weightUnitName","ref","pagination","tableData","rows","loading","footerMethod","handlePagination","selectAllEvent","selectRowChange","staticRenderFns","name","components","data","busiYear","demandOrgCid","orgCodeList","yearList","bizYear","batchList","industryUnitList","industryUnitTreeData","fieldNames","label","children","pageNumber","pageSize","total","bizCode","oldRows","weightUnit","computed","appConfig","created","methods","onQuery","pageNo","needCollectBatchId","query","then","catch","console","handleUnitParse","handleOlDataRow","obj","newTableData","onAdd","onEdit","row","onDel","title","content","onOk","idList","delete","ids","handleGetYear","orgObj","appCode","yearTypeCode","businessYearObj","businessYear","batchParam","respone","defaultBatchName","params","pageStatus","industryObj","handleListToTree","parent","treeData","sumNum","list","field","count","columns","checked","JSON","component"],"mappings":"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","file":"js/chunk-2d0b385e.80b7e64c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ec-container',{attrs:{\"height\":\"100%\",\"title\":\"采集批次计划量查询\",\"icon\":\"onetomany\",\"color-code\":\"008\"}},[_c('ec-container-body',[_c('ec-panel',{attrs:{\"auto\":false}},[_c('ec-panel-toolbar',[_c('ec-query-panel',{on:{\"query\":function($event){return _vm.$refs.table.pageAction(1)},\"reset\":_vm.onReset}},[_c('ec-query-item',{attrs:{\"label\":\"业务年度\"}},[_c('a-input-number',{attrs:{\"min\":2000,\"max\":2099},model:{value:(_vm.queryItems.busiYear),callback:function ($$v) {_vm.$set(_vm.queryItems, \"busiYear\", $$v)},expression:\"queryItems.busiYear\"}})],1),_c('ec-query-item',{attrs:{\"label\":\"采集批次\"}},[_c('a-select',{attrs:{\"allow-clear\":\"\",\"placeholder\":\"请选择\"},model:{value:(_vm.queryItems.batchName),callback:function ($$v) {_vm.$set(_vm.queryItems, \"batchName\", $$v)},expression:\"queryItems.batchName\"}},_vm._l((_vm.batchList),function(item){return _c('a-select-option',{key:item.batchName},[_vm._v(\" \"+_vm._s(item.batchName)+\" \")])}),1)],1),_c('ec-query-item',{attrs:{\"label\":\"中烟工业\"}},[_c('a-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.queryItems.demandOrgCid),callback:function ($$v) {_vm.$set(_vm.queryItems, \"demandOrgCid\", $$v)},expression:\"queryItems.demandOrgCid\"}},_vm._l((_vm.industryUnitList),function(item){return _c('a-select-option',{key:item.demandOrgCode},[_vm._v(\" \"+_vm._s(item.demandOrgName)+\" \")])}),1)],1)],1),_c('ec-divider')],1),_c('ec-panel-header',[_c('ec-v-item',[_c('ec-panel-item',[_c('ec-panel-item-right',[_c('span',{staticClass:\"ant-form-text\"},[_vm._v(\" 计量单位： \"+_vm._s(_vm.weightUnitName))])])],1)],1)],1),_c('ec-panel-body',[_c('ec-table',{ref:\"table\",attrs:{\"border\":\"\",\"height\":\"100%\",\"auto\":false,\"pagination\":_vm.pagination,\"data\":_vm.tableData.rows,\"loading\":_vm.loading,\"row-select\":\"\",\"show-footer\":\"\",\"footer-method\":_vm.footerMethod},on:{\"page-action\":_vm.handlePagination,\"checkbox-all\":_vm.selectAllEvent,\"checkbox-change\":_vm.selectRowChange}},[_c('ec-table-col',{attrs:{\"width\":\"70\",\"title\":\"序号\",\"type\":\"seq\",\"align\":\"center\"}}),_c('ec-table-col',{attrs:{\"field\":\"busiYear\",\"title\":\"业务年度\",\"align\":\"center\",\"width\":\"130\"}}),_c('ec-table-col',{attrs:{\"field\":\"batchName\",\"title\":\"采集批次\",\"align\":\"left\",\"min-width\":\"150\"}}),_c('ec-table-col',{attrs:{\"field\":\"orgName\",\"title\":\"中烟工业\",\"align\":\"left\",\"min-width\":\"150\"}}),_c('ec-table-col',{attrs:{\"field\":\"crudeWeight\",\"title\":\"烤烟计划量\",\"align\":\"right\",\"width\":\"150\"}}),_c('ec-table-col',{attrs:{\"field\":\"sunCuredWeight\",\"title\":\"晾晒烟计划量\",\"align\":\"right\",\"width\":\"150\"}}),_c('ec-table-col',{attrs:{\"field\":\"rtPlanWeight\",\"title\":\"再造烟叶计划量\",\"align\":\"right\",\"width\":\"150\"}})],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <ec-container height=\"100%\" title=\"采集批次计划量查询\" icon=\"onetomany\" color-code=\"008\">\r\n    <ec-container-body>\r\n      <ec-panel :auto=\"false\">\r\n        <ec-panel-toolbar>\r\n          <ec-query-panel @query=\"$refs.table.pageAction(1)\" @reset=\"onReset\">\r\n            <ec-query-item label=\"业务年度\">\r\n              <a-input-number v-model=\"queryItems.busiYear\" :min=\"2000\" :max=\"2099\" />\r\n            </ec-query-item>\r\n            <ec-query-item label=\"采集批次\">\r\n              <a-select allow-clear placeholder=\"请选择\" v-model=\"queryItems.batchName\">\r\n                <a-select-option v-for=\"item in batchList\" :key=\"item.batchName\">\r\n                  {{ item.batchName }}\r\n                </a-select-option>\r\n              </a-select>\r\n            </ec-query-item>\r\n\r\n            <ec-query-item label=\"中烟工业\">\r\n              <a-select placeholder=\"请选择\" v-model=\"queryItems.demandOrgCid\">\r\n                <a-select-option v-for=\"item in industryUnitList\" :key=\"item.demandOrgCode\">\r\n                  {{ item.demandOrgName }}\r\n                </a-select-option>\r\n              </a-select>\r\n            </ec-query-item>\r\n          </ec-query-panel>\r\n          <ec-divider />\r\n        </ec-panel-toolbar>\r\n        <ec-panel-header>\r\n          <ec-v-item>\r\n            <ec-panel-item>\r\n              <!-- <ec-panel-item-left>\r\n                  <a-button type=\"primary\" @click=\"onAdd\">导出</a-button>\r\n                </ec-panel-item-left> -->\r\n              <ec-panel-item-right>\r\n                <span class=\"ant-form-text\"> 计量单位： {{ weightUnitName }}</span>\r\n              </ec-panel-item-right>\r\n            </ec-panel-item>\r\n          </ec-v-item>\r\n        </ec-panel-header>\r\n        <ec-panel-body>\r\n          <ec-table\r\n            ref=\"table\"\r\n            border\r\n            height=\"100%\"\r\n            :auto=\"false\"\r\n            @page-action=\"handlePagination\"\r\n            :pagination=\"pagination\"\r\n            :data=\"tableData.rows\"\r\n            @checkbox-all=\"selectAllEvent\"\r\n            @checkbox-change=\"selectRowChange\"\r\n            :loading=\"loading\"\r\n            row-select\r\n            show-footer\r\n            :footer-method=\"footerMethod\"\r\n          >\r\n            <ec-table-col width=\"70\" title=\"序号\" type=\"seq\" align=\"center\" />\r\n            <ec-table-col field=\"busiYear\" title=\"业务年度\" align=\"center\" width=\"130\" />\r\n            <ec-table-col field=\"batchName\" title=\"采集批次\" align=\"left\" min-width=\"150\" />\r\n            <ec-table-col field=\"orgName\" title=\"中烟工业\" align=\"left\" min-width=\"150\" />\r\n            <ec-table-col field=\"crudeWeight\" title=\"烤烟计划量\" align=\"right\" width=\"150\" />\r\n            <ec-table-col field=\"sunCuredWeight\" title=\"晾晒烟计划量\" align=\"right\" width=\"150\" />\r\n            <ec-table-col field=\"rtPlanWeight\" title=\"再造烟叶计划量\" align=\"right\" width=\"150\" />\r\n          </ec-table>\r\n        </ec-panel-body>\r\n      </ec-panel>\r\n    </ec-container-body>\r\n  </ec-container>\r\n</template>\r\n\r\n<script>\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n  name: 'BatchManage',\r\n  components: {},\r\n  data() {\r\n    return {\r\n      queryItems: {\r\n        busiYear: '',\r\n        batchName: '',\r\n        demandOrgCid: undefined,\r\n      },\r\n      // isDisable: true,\r\n      orgCodeList: [],\r\n      yearList: [],\r\n      bizYear: '',\r\n      loading: false,\r\n      batchList: [],\r\n      // 工业单位列表\r\n      industryUnitList: [],\r\n      // 工业单位树数据\r\n      industryUnitTreeData: [],\r\n      // 树组件字段重置\r\n      fieldNames: { label: 'orgAbbr', value: 'orgUniqueCode', children: 'children' },\r\n      pagination: {\r\n        pageNumber: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n      },\r\n      bizCode: '',\r\n      oldRows: [],\r\n      weightUnit: 500000,\r\n      weightUnitName: '万担',\r\n      tableData: {\r\n        // 数据表格\r\n        // totalRows: 0,\r\n        rows: [],\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    appConfig() {\r\n      return this.$store.getters.getAppConfig;\r\n    },\r\n  },\r\n  created() {\r\n    const { appCode } = this.$router.history.current.query;\r\n    this.appCode = appCode || 'CM'; // 获取当前登入信息\r\n  },\r\n  methods: {\r\n    // 数据初始化\r\n    onQuery() {\r\n      // const { orgCodeList } = this;\r\n      // const demandOrgCid = orgCodeList.length > 0 ? orgCodeList[0] : '';\r\n      const { batchName } = this.queryItems;\r\n      const batchNameValue = batchName === '全部' ? '' : batchName;\r\n      const needCollectBatch = this.batchList.find((item) => item.batchName === batchName);\r\n\r\n      const selectDemandOrg = this.industryUnitList.find(\r\n        (item) => item.demandOrgCode === this.queryItems.demandOrgCid,\r\n      );\r\n      const data = {\r\n        pageNo: this.pagination.pageNumber,\r\n        pageSize: this.pagination.pageSize,\r\n        busiYear: this.queryItems.busiYear,\r\n        batchName: batchNameValue,\r\n        demandOrgCode: selectDemandOrg?.demandOrgCode || '',\r\n        needCollectBatchId: needCollectBatch?.needCollectBatchId || '',\r\n      };\r\n      this.loading = true;\r\n      this.$apis.apm.demandQuery\r\n        .query(data)\r\n        .then((res) => {\r\n          this.pagination.total = res.totalRows;\r\n          const rows = res?.rows;\r\n          const tableData = _.cloneDeep(rows);\r\n          this.handleUnitParse(tableData);\r\n          this.loading = false;\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    // 处理单位切换\r\n    handleUnitParse(rows) {\r\n      const newTableData = [];\r\n      const handleOlDataRow = rows;\r\n\r\n      handleOlDataRow.forEach((item) => {\r\n        const obj = item;\r\n        obj.crudeWeight = (obj.crudeWeight / this.weightUnit).toFixed(2);\r\n        obj.sunCuredWeight = (obj.sunCuredWeight / this.weightUnit).toFixed(2);\r\n        obj.rtPlanWeight = (obj.rtPlanWeight / this.weightUnit).toFixed(2);\r\n        newTableData.push(obj);\r\n      });\r\n      this.tableData.rows = newTableData;\r\n    },\r\n    // 新增\r\n    onAdd() {\r\n      this.$refs.BatchManageForm.show();\r\n    },\r\n\r\n    // 编辑\r\n    onEdit(row) {\r\n      const newRow = Object.assign({}, row);\r\n      this.$refs.BatchManageForm.show(newRow);\r\n    },\r\n\r\n    // 按钮删除\r\n    onDel() {\r\n      if (!this.selectedRows || this.selectedRows.length <= 0) {\r\n        this.$message.error('请选择一条数据再删除');\r\n        return;\r\n      }\r\n      this.$confirm({\r\n        title: '是否执行该操作?',\r\n        content: () => (\r\n          <div style=\"color:red;\">\r\n            是否确认删除选中的数据，确认请点击'确认'按钮，取消点击'取消'按钮。\r\n          </div>\r\n        ),\r\n        onOk: () => {\r\n          this.loading = true;\r\n          const idList = [];\r\n          for (let i = 0; i < this.selectedRows.length; i++) {\r\n            idList.push(this.selectedRows[i].leafColorId);\r\n          }\r\n          this.$apis.tbm.tabaccoColor\r\n            .delete({ ids: idList })\r\n            .then((res) => {\r\n              console.log(JSON.stringify(res));\r\n              if (res.result) {\r\n                this.loading = false;\r\n                this.$refs.table.pageAction(1);\r\n                this.$message.success('操作成功');\r\n              } else {\r\n                this.$message.error('操作失败');\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              this.loading = false;\r\n              if (error) {\r\n                this.$message.error(error.message || '操作失败');\r\n              } else {\r\n                this.$message.error('操作失败');\r\n              }\r\n            });\r\n        },\r\n      });\r\n    },\r\n\r\n    // 重置\r\n    onReset() {\r\n      this.queryItems.busiYear = this.bizYear;\r\n      this.queryItems.demandOrgCid = undefined;\r\n      this.queryItems.batchName = this.defaultBatchName;\r\n      this.orgCodeList = [];\r\n      this.$refs.table.pageAction(1);\r\n    },\r\n\r\n    async handlePagination(pageNumber, pageSize) {\r\n      this.pagination.pageNumber = pageNumber;\r\n      this.pagination.pageSize = pageSize;\r\n      await this.handleGetYear();\r\n      // this.onQuery();\r\n    },\r\n    // 获取业务年度\r\n    async handleGetYear() {\r\n      if (this.queryItems.busiYear === '') {\r\n        if (!this.orgCode) {\r\n          const orgObj = await this.$apis.bim.curOrg.get({});\r\n          this.bizCode = orgObj?.bizCode;\r\n          this.orgCode = orgObj?.orgUniqueCode; // todo 写死数据\r\n        }\r\n        const data = {\r\n          bizCode: this.appConfig.bizCode, // todo 写死的数据\r\n          appCode: this.appCode,\r\n          yearTypeCode: 'BIZ_YEAR',\r\n        };\r\n        const businessYearObj = await this.$apis.bpm.executionEnter.getBuYear(data);\r\n\r\n        const businessYear = businessYearObj?.yearValue || new Date().getFullYear();\r\n        this.queryItems.busiYear = businessYear;\r\n        this.bizYear = businessYear;\r\n        console.log(`业务年度${businessYear}`);\r\n        // 获取批次列表，并设置批次的默认值\r\n        const batchParam = {\r\n          busiYear: businessYear,\r\n        };\r\n        const respone = await this.$apis.apm.demandManage.queryBatch(batchParam);\r\n        const rows = respone?.rows || [];\r\n\r\n        if (rows && rows.length > 0) {\r\n          rows.unshift({ batchName: '全部' });\r\n        }\r\n        this.batchList = rows;\r\n        const defaultBatchName = rows && rows.length > 0 ? rows[0].batchName : '';\r\n        this.queryItems.batchName = defaultBatchName;\r\n        this.defaultBatchName = defaultBatchName;\r\n\r\n        const params = {\r\n          busiYear: businessYear,\r\n          pageStatus: 'amount',\r\n        };\r\n\r\n        const industryObj = await this.$apis.apm.demandQuery.queryIndustry(params);\r\n        this.industryUnitList = industryObj.rows || [];\r\n      }\r\n\r\n      await this.onQuery();\r\n    },\r\n\r\n    // 将列转为树结构\r\n    handleListToTree(data) {\r\n      // * 先生成parent建立父子关系\r\n      const obj = {};\r\n      data.forEach((item) => {\r\n        obj[item.orgUniqueCode] = item;\r\n      });\r\n      const treeData = [];\r\n      data.forEach((item) => {\r\n        const parent = obj[item.parentOrgUniqueCode];\r\n        if (parent) {\r\n          // * 当前项有父节点\r\n          parent.children = parent.children || [];\r\n          parent.children.push(item);\r\n        } else {\r\n          // * 当前项没有父节点 -> 顶层\r\n          treeData.push(item);\r\n        }\r\n      });\r\n\r\n      // 因为商业单位会返回国家局,所以将第一级去除\r\n      if (treeData.length === 1) {\r\n        return treeData[0].children;\r\n      } else {\r\n        return treeData;\r\n      }\r\n    },\r\n\r\n    // 合计数据的处理\r\n    sumNum(list, field) {\r\n      let count = 0;\r\n      list.forEach((item) => {\r\n        count += Number(item[field] || 0);\r\n      });\r\n      return count.toFixed(2);\r\n    },\r\n    // 底部合计行\r\n    footerMethod({ columns, data }) {\r\n      return [\r\n        columns.map((column, columnIndex) => {\r\n          if (columnIndex === 0) {\r\n            return '合计';\r\n          }\r\n          if (['cruedWeight', 'sunCuredWeight', 'rtPlanWeight'].includes(column.property)) {\r\n            return this.sumNum(data, column.property);\r\n          }\r\n          return null;\r\n        }),\r\n      ];\r\n    },\r\n    // 选中所有列表\r\n    selectAllEvent({ checked, records }) {\r\n      console.log(`${checked}-选中所有records包含选中的所以对象----${JSON.stringify(records)}`);\r\n      this.selectedRows = records;\r\n    },\r\n\r\n    // 选中列表\r\n    selectRowChange({ checked, records }) {\r\n      console.log(\r\n        `${checked}-选择改变时会把records包含选中的所以对象----${JSON.stringify(records)}`,\r\n      );\r\n      this.selectedRows = records;\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=2257002c&\"\nimport script from \"./Index.vue?vue&type=script&lang=js&\"\nexport * from \"./Index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}